# This workflow trigger on push to any branch.
name: CI / CD
on:
  push:
    paths-ignore:
      - '**.md'
      - '.gitignore'
      - 'LICENCE'
      - 'CODEOWNERS'
      - 'kafka/oneshot.json'
      - 'nais/alerterator.yml'
      - '.github/workflows/apply-alerts.yml'
    branches:

env:
  IMAGE: docker.pkg.github.com/${{ github.repository }}/pleiepengesoknad-prosessering:${{ github.sha }}
  GITHUB_USERNAME: x-access-token
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  test:
    name: Check Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2.4.0
      - name: Set up JDK 11
        uses: actions/setup-java@v2.4.0
        with:
          java-version: 11
          distribution: 'zulu'
          cache: 'gradle'
      - name: Test Code
        run: ./gradlew clean test

  build-code-and-push-docker:
    name: Build code and push docker image
    if: startsWith(github.ref, 'refs/heads/dev-') ||startsWith(github.ref, 'refs/heads/master') # Build and push docker if branch is either master or dev-*
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2.4.0
      - name: Set up JDK 11
        uses: actions/setup-java@v2.4.0
        with:
          java-version: 11
          distribution: 'zulu'
          cache: 'gradle'
      - name: Build JAR
        run: ./gradlew shadowJar # Creates a combined JAR of project and runTime dependencies.
      - name: Build and publish Docker image
        run: |
          docker build --tag ${IMAGE} .
          docker login docker.pkg.github.com -u ${GITHUB_REPOSITORY} -p ${GITHUB_TOKEN}
          docker push ${IMAGE}

  deploy-dev-fss:
    name: Deploy to dev-fss
    if: startsWith(github.ref, 'refs/heads/dev-') || startsWith(github.ref, 'refs/heads/master') # Deploy if branch is either master or dev-*
    needs: build-code-and-push-docker # Depends on build-code-and-push-docker job
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.4.0
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-fss
          RESOURCE: nais/naiserator.yml
          VARS: nais/dev-fss.json

  deploy-prod-fss:
    name: Deploy to prod-fss
    if: startsWith(github.ref, 'refs/heads/master')  # If the branch is master
    needs: build-code-and-push-docker # Depends on build-code-and-push-docker job
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.4.0
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-fss
          RESOURCE: nais/naiserator.yml
          VARS: nais/prod-fss.json
